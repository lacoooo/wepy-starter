
<script>
import wepy from 'wepy'
import 'wepy-async-function'

export default class extends wepy.app {
  constructor() {
    super()
    // this.use('promisify')
    this.use('requestfix')
  }
  config = {
    pages: [
      'pages/index/index'
    ],
    window: {
      'backgroundTextStyle': 'light',
      'navigationBarBackgroundColor': '#fff',
      'navigationBarTitleText': '7MX',
      'navigationBarTextStyle': 'black',
      'enablePullDownRefresh': true
    },
    'tabBar': {
      'color': '#7f7f7f',
      'selectedColor': '#000000',
      'backgroundColor': '#fff',
      'borderStyle': '#e3e3e3',
      'list': [
        {
          'pagePath': 'pages/index/index',
          'text': '首页',
          'iconPath': 'assets/tab_home_unselect.png',
          'selectedIconPath': 'assets/tab_home.png'
        },
        {
          'pagePath': 'pages/index/index',
          'text': '介绍',
          'iconPath': 'assets/tab_profile_unselect.png',
          'selectedIconPath': 'assets/tab_profile.png'
        },
        {
          'pagePath': 'pages/index/index',
          'text': '个人',
          'iconPath': 'assets/tab_profile_unselect.png',
          'selectedIconPath': 'assets/tab_profile.png'
        }
      ]
    },
    'networkTimeout': {
      'request': 10000,
      'downloadFile': 10000
    },
    'debug': true
  }

  globalData = {
    userInfo: null
  }

  onLaunch() {
    this.testAsync()
  }

  sleep(s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync() {
    const data = await this.sleep(3)
    console.log(data)
  }

  getUserInfo(cb) {
    const that = this
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
    wepy.getUserInfo({
      success(res) {
        that.globalData.userInfo = res.userInfo
        cb && cb(res.userInfo)
      }
    })
  }
}
</script>
<style lang="less" scoped>
.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
}
</style>
